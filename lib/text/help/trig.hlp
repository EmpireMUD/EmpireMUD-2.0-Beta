DG-SCRIPTS DG_SCRIPTS DGSCRIPTS TRIGGERS

DG Scripts 1.0.12 e2

Stands for Death Gate scripts and are named after the original MUD they came
from. DG Scripts is a popular CircleMUD snippet and is also included with
TBAMUD, the successor to the CIrcleMUD project.

EmpireMUD uses a ported version of DG Scripts that has additional variables
and functionality unique to the EmpireMUD code base, such as support for
scripting vehicles. It is also missing some of the functions that no longer
exist in its CircleMUD base code. For the most part, EmpireMUD's version of
DG Scripts attempts to preserve the variables and syntax of classic DG Scripts
in order to make the system easy to learn for people already familiar with the
scripting system, and to make it easier to use online DG Scripts tutorials.

See: TRIGEDIT
#d
"ABILITY TRIGGER" "MTRIG ABILITY" "OTRIG ABILITY" "RTRIG ABILITY" TRIGEDIT-MOB-ABILITY TRIGEDIT-OBJ-ABILITY TRIGEDIT-ROOM-ABILITY

Ability (trigger type)

Argument type:  percent chance to execute
Return value:  return 0 to prevent the ability

Ability triggers are used by mobs, objects, and rooms to detect, alter,
replace, or prevent player abilities. Rooms will trigger on any ability
performed in them, but mobs and objects only execute Ability triggers if they
are the target of the ability.

Note: Ability triggers attached to charmed mobs will not fire unless the trigger
   also has the Charmed type.

Variables: 
  &c%actor%&0 - The user of the ability.
  &c%ability%&0 - The vnum of the ability.
  &c%abilityname%&0 - The name of the ability.

Room triggers also provide:
  &c%vict%&0 - The target (mob/player) of the ability, if any.
  &c%obj%&0 - The target (object) of the ability, if any.

Mob and object triggers also provide:
  &c%self%&0 - Ability triggers only execute when the target is self.

See also: MTRIG CHARMED
#d
"BUY TRIGGER" "MTRIG BUY" "OTRIG BUY" "RTRIG BUY" "VTRIG BUY" TRIGEDIT-MOB-BUY TRIGEDIT-OBJ-BUY TRIGEDIT-ROOM-BUY TRIGEDIT-VEH-BUY

Buy (trigger type)

Argument type:  location of the item to trigger (obj triggers only)
Return value:  return 1 (default) to proceed with the purchase
               return 0 to block the purchase

Buy triggers let you intercept a player attempting to buy from a shop. All
buy triggers in the room will run, regardless of whether the shop is attached
to a mob, obj, or room.

Variables:
  &c%actor%&0 - The person who is trying to buy.
  &c%shopkeeper%&0 - The mob who runs the shop, if any (may be empty).
  &c%obj%&0 - The object the player is buying.
  &c%cost%&0 - The numeric value of the purchase.
  &c%currency%&0 - The currency vnum of the purchase, or "coins" if it's coins.

Note: The %obj% is already in the player's inventory when the script runs. You
   can change its properties in your script but you should NEVER purge it in
   the script. Returning 0 will block the purchase and purge the object. 
#d
"COMMAND TRIGGER" "MTRIG COMMAND" "OTRIG COMMAND" "RTRIG COMMAND" "VTRIG COMMAND" TRIGEDIT-MOB-COMMAND TRIGEDIT-OBJ-COMMAND TRIGEDIT-ROOM-COMMAND TRIGEDIT-VEH-COMMAND

Command (trigger type)

Argument type:  name of the command (string), * for match any command, and
                match multiple commands by separating them with spaces
Return value:  return 0 to proceed with normal command execution
               return 1 (default) if the trigger processed the command

Command triggers let you create player commands, or modify the result of normal
input. Common functions of command triggers include making something happen
when you "use" an object, preventing a player from using "flee", or building
puzzle games. If your script determines that it shouldn't actually process the
command that triggered it, return 0 and the player will see the normal result
of their command.

Note: High level Immortals can only use command triggers when the "hassle"
   toggle is on.
Note: Command triggers attached to charmed mobs will not fire unless the trigger
   also has the Charmed type.
Note: If you trigger on a real game command, you should use the entire word
   (not an abbreviation); the trigger will also match abbreviations. If you are
   instead adding a new command, it will only work if the player types an exact
   match OR the player abbreviates your command with something that isn't an
   abbreviation for a real command ("c" always abbreviates the real command 
   "chop", not a script command like "canoodle").

Variables:
  &c%actor%&0 - The person who issued the command.
  &c%cmd%&0 - The command (without arguments) as typed.
  &c%arg%&0 - The arguments typed with the command (if any).

See also: TOGGLE, MTRIG CHARMED
#d
"DOOR TRIGGER" "MTRIG DOOR" "RTRIG DOOR" TRIGEDIT-MOB-DOOR TRIGEDIT-ROOM-DOOR TRIGEDIT-DOOR

Door (trigger type)

Argument type:  percent chance to execute
Return value:  return 0 to prevent the door command

Activated when a player uses the door-specific commands: 'close, open' on a
door (not on objects). This can be used to require keys or other restrictions.

Note: Door triggers attached to charmed mobs will not fire unless the trigger
   also has the Charmed type.

Variables:
  &c%actor%&0 - The character using the command.
  &c%direction%&0 - The direction the command is used on.
  &c%cmd%&0 - The specific command activating the trigger.

See also: MTRIG CHARMED
#d
"DROP TRIGGER" "OTRIG DROP" "RTRIG DROP" TRIGEDIT-OBJ-DROP TRIGEDIT-ROOM-DROP DROP-TRIGGER TRIG-OBJ-DROP TRIG-ROOM-DROP

Drop (trigger)

Argument type:  percent chance to trigger
Return value:  return 0 to prevent the drop

As an object trigger, this is activated any time a character attempts to drop
the object. As a room trigger, it happens when an object is dropped in the
room.

The object trigger includes putting the object into a container or vehicle.

Variables:
  &c%actor%&0 - The character attempting to drop the object.
  &c%object%&0 - The object the character is attempting to drop (room trigger).
  &c%self%&0 - The item being dropped (object trigger).
#d
"EMPIRE VARS" "EMPIRE VARIABLES" EMP-VARS EMPIRE-VARS TRIGEDIT-EMP-VAR TRIGEDIT-VARIABLES-EMPIRES

Empire variables are accessed via %char.empire% (or obj, room, vehicle). If
the thing belongs to no empire, this will be empty.

When using field - The variable returns:
&cadj&0 - Adjective form of the empire's name.
&cbanner&0 - Empire's banner (as a color code).
&ccoins&0 - How many coins the empire has in its vaults.
&cdescription&0 - The empire's full description.
&cfame&0 - The empire's total fame value.
&cgreatness&0 - The empire's total greatness value.
&chas_tech(name)&0 - True if the empire has that technology (globally).
   This will not work for island-based techs.
&cid&0 - The scripting ID for the empire.
&cleader_id&0 - The player id of the empire's leader.
&cmax_territory&0 - The amount of land the empire can claim, total.
&cmembers&0 - Number of players in the empire.
&cmilitary&0 - Total military value of the empire.
&cname&0 - Empire's full name.
&cpopulation&0 - Total NPC population.
&cpriv(name)&0 - Returns the rank required for a given privilege.
&crank(num)&0 - Returns the name of a given rank.
&cranks&0 - The number of ranks in the empire.
&cterritory&0 - The amount of land claimed.
&cvnum&0 - The empire's vnum.
&cwealth&0 - The empire's total wealth (coins + treasure).
#d
"ENTER TRIGGER" "ENTRY TRIGGER"

Disambiguation: Different scriptable things have different uses for enter/entry
triggers. See also:

Mob Entry trigger: &yMTRIG ENTRY&0
Room Enter trigger: &yRTRIG ENTER&0
Vehicle Entry trigger: &yVTRIG ENTRY&0
#d
EXPRESSIONS TRIGEDIT-EXPRESSIONS INCREMENTS MATHEMATICAL OPERATORS /= || \

A FALSE expression is any expression that evaluates to 0, or an empty string.
A TRUE expression is any expression that evaluates to anything other than a
false expression. The expression is evaluated from left to right, unless one
operator has precedence over another. Parenthesis can be used to group. 

|Operator|         Name          | Examples  0=False 1=True  |
--------------------------------------------------------------
|   !    | negation              | !() = 1; !0 = 1; !dog = 0;|
|   *    | multiplication        | 10 * 20 = 400             |
|   /    | division              | 100 / 20 = 5              |
|   //   | remainder             | 5 // 4 = 1                |
|   +    | addition              | 10 + 15 = 25              |
|   -    | subtraction           | 15 - 10 = 5               | 
|   <    | less than             | 4 < 3 = 0; 4 < 5 = 1      |
|   >    | greater than          | 4 > 3 = 1; 4 > 4 = 0      |
|   <=   | less than or equal    | 4 <= 3 = 0; 4 <= 5 = 1    |
|   >=   | greater than or equal | 4 >= 3 = 1; 4 >= 4 = 1    |
|   /=   | abbrev                | "concatenate" /= "con"    |
|   ~=   | substring             | "Dark Forest" ~= "Forest" |
|   ==   | equivalence           | 5 == 3 = 0; dog == DoG = 1| 
|   !=   | inequality            | 0 != Z = 0; dog != d = 1  |
|   &&&&   | logical and           | 1 &&&& 0 = 0; 5 &&&& 3 = 1    |
|   ||   | logical or            | 0 || ( ) = 0; 5 || 0 = 1  |
--------------------------------------------------------------

Operator precedence is as follows (higher items take precedence:
   !
   * / //
   + -
   <= < >= >
   /= ~=
   == !=
   &&&&
   ||
#d
"FINISH QUEST TRIGGER" "MTRIG FINISH QUEST" "OTRIG FINISH QUEST" "RTRIG FINISH QUEST" "VTRIG FINISH QUEST" TRIGEDIT-MOB-FINISH-QUEST TRIGEDIT-OBJ-FINISH-QUEST TRIGEDIT-ROOM-FINISH-QUEST TRIGEDIT-VEH-FINISH-QUEST "FINISH-QUEST TRIGGER"

Finish Quest (trigger)

Argument type:  percent chance to execute
Return value:  return 0 to block the quest turn-in

When a character attempts to turn in a finished quest, it executes all the
Finish Quest triggers in the room. It will also run Finish Quest triggers
attached to the quest itself.

The quest's triggers always run LAST, allowing them to be sure that no other
trigger already prevented the quest turn-in.

Variables:
  &c%actor%&0 - The character finishing the quest.
  &c%questvnum%&0 - The vnum of the quest to end.
  &c%questname%&0 - The name of the quest to end.

See also: START QUEST TRIGGER
#d
"GLOBAL TRIGGER" "GLOBAL RANDOM TRIGGER" "MTRIG GLOBAL" "OTRIG GLOBAL" "RTRIG GLOBAL" "VTRIG GLOBAL" TRIGEDIT-MOB-GLOBAL TRIGEDIT-OBJ-GLOBAL TRIGEDIT-ROOM-GLOBAL TRIGEDIT-VEH-GLOBAL

Global (trigger)

The Global trigger type is not an event itself, but is instead combined with
the Random trigger event. This allows the Random trigger to fire even if there
are no players present.

Because EmpireMUD's world is so large, you should use Global triggers sparingly
and not on things that spawn on the map. Also consider having the script
detach any random trigger that's no longer needed.

See also: DETACH, RANDOM TRIGGER
#d
"GREET TRIGGER" "MTRIG GREET" "VTRIG GREET" TRIGEDIT-MOB-GREET TRIGEDIT-VEH-GREET GREET "GREET ALL TRIGGER" "MTRIG GREET ALL" TRIGEDIT-MOB-GREET-ALL GREET-ALL TRIGEDIT-MOB-GREETALL

Greet (trigger)

Argument type:  percent chance to execute
Return value:  return 0 to attempt to block entry and send the actor back

When a character attempts to enter a room, it executes all the Greet triggers
in that room. Some types of entry, like normal movement, can be prevented by
returning 0 from the script.

Note: Mobs can only Greet people they can see; use Greet All to also trigger on
   people the mob can't see. Vehicle triggers do not make this distinction.
Note: Greet triggers attached to charmed mobs will not fire unless the trigger
   also has the Charmed type.
Note: Players entering magically (or via something other than a normal room
   exit) may not be prevented from entering. You can usually check this by
   seeing if the %direction% variable is empty.

Variables:
  &c%actor%&0 - The character entering the room.
  &c%direction%&0 - The direction the character came from, if any.
  
See also: MTRIG CHARMED
#d
"LEAVE TRIGGER" "LEAVE-ALL TRIGGER" "MTRIG LEAVE" "OTRIG LEAVE" "RTRIG LEAVE" "VTRIG LEAVE" "MTRIG LEAVE ALL" TRIGEDIT-MOB-LEAVE TRIGEDIT-OBJ-LEAVE TRIGEDIT-ROOM-LEAVE TRIGEDIT-VEH-LEAVE TRIGEDIT-MOB-LEAVE-ALL

Leave (trigger)

Argument type:  percent chance to execute
Return value:  return 0 to prevent leaving

Leave triggers occur when a character attempts to leave a room. For mobs,
objects, and vehicles, it is the room they are currently in.

Mobs can only execute Leave triggers on people they can see. You can use the
Leave-All version to also stop sneaky or invisible people.

Note: Leave triggers attached to charmed mobs will not fire unless the trigger
   also has the Charmed type.

Variables: 
  &c%actor%&0 - The character trying to leave the room.
  &c%direction%&0 - The direction the character is leaving to.

See also: MTRIG LEAVE
#d
"LOAD TRIGGER" "MTRIG LOAD" "OTRIG LOAD" "RTRIG LOAD" "VTRIG LOAD" TRIGEDIT-MOB-LOAD TRIGEDIT-OBJ-LOAD TRIGEDIT-VEH-LOAD TRIGEDIT-ROOM-LOAD TRIGEDIT-LOAD TRIG-LOAD

Load (trigger type)

Argument type:  percent chance to execute

The Load trigger happens when something is first loaded into the game (but not
on reboot or re-login). For crafted vehicles, the Load trigger doesn't happen
until construction is complete.

Certain actions like unharnessing a mob from a vehicle will load a new copy of
the mob and set off its load triggers.

Buildings call their load triggers when first constructed, even before they
are complete.

See also: RTRIG COMPLETE
#d
"MTRIG ENTRY" "VTRIG ENTRY" "MTRIG ENTER" "VTRIG ENTER" TRIGEDIT-MOB-ENTRY TRIGEDIT-VEH-ENTRY TRIGEDIT-ENTRY TRIGGER-ENTRY 

Entry (trigger)

Argument type:  percent chance to execute
Return value:  return 0 to cancel the movement and put the mob back

The Entry trigger happens whenever its mob (or vehicle) enters a new room.
You can return 0 if it shouldn't have gone there and should go back. If you
want the mob to do something on arrival, you should consider using a short
wait.

Note: Entry triggers attached to charmed mobs will not fire unless the trigger
   also has the Charmed type.

See also: WAIT, MTRIG CHARMED
#d
MUDCOMMAND CMD.MUDCOMMAND %CMD.MUDCOMMAND% %MUDCOMMAND%

Used to match text to existing commands in the MUD. This will also match
any abbreviations.

Note that in Command triggers, you only have to specify the whole word you
want to match, and the mud will handle abbreviations for you. This means you
almost never have to check %cmd.mudcommand%.

Example:
  * check for command sit with arg chair. Also matching any abbreviations. 
  if %cmd.mudcommand% == sit &&&& chair /= %arg% &&&& %arg%

See also: COMMAND TRIGGER
#d
"PLAYER-IN-ROOM TRIGGER" "PLAYER IN ROOM TRIGGER" "MTRIG PLAYER-IN-ROOM" "OTRIG PLAYER-IN-ROOM" "RTRIG PLAYER-IN-ROOM" "VTRIG PLAYER-IN-ROOM"

Player-in-Room (trigger)

This trigger type is not an event itself, but is instead combined with some
other trigger types to prevent them from triggering unless a player is present.
This generally reduces the number of triggers running when they don't need to.

Supported types:
  Random

See also: RANDOM TRIGGER
#d
"RANDOM TRIGGER" "MTRIG RANDOM" "OTRIG RANDOM" "RTRIG RANDOM" "VTRIG RANDOM" TRIGEDIT-MOB-RANDOM TRIGEDIT-OBJ-RANDOM TRIGEDIT-ROOM-RANDOM TRIGEDIT-VEH-RANDOM RANDOM-TIMING TIMING

Random (trigger type)

Argument type:  percent chance to execute

Random triggers fire every 13 seconds -- but only if a player is nearby.
You can set how often the trigger fires by setting the percent to:

1% = every 22 minutes
2% = 11 minutes
5% = 4 minutes
10% = 2 minutes
20% = 1 minute
50% = 26 seconds
100% = 13 seconds

(all times are approximate, except 100%)

You can add the "Global" and "Player-in-Room" modifiers.

Note: Random triggers attached to charmed mobs will not fire unless the trigger
   also has the Charmed type.

See also: GLOBAL TRIGGER, MTRIG CHARMED, PLAYER-IN-ROOM TRIGGER
#d
"REBOOT TRIGGER" "MTRIG REBOOT" "OTRIG REBOOT" "RTRIG REBOOT" "VTRIG REBOOT" TRIGEDIT-MOB-REBOOT TRIGEDIT-OBJ-REBOOT TRIGEDIT-ROOM-REBOOT TRIGEDIT-VEH-REBOOT REBOOT-TIMING TIMING

Reboot (trigger type)

Return value:  return 0 to block more reboot triggers on this mob/obj/etc

This type of trigger fires when the mud starts up, for example after a reboot
or crash. This allows you to fix complex setups like a mob that should be
following another mob, and other things that aren't saved through reboots.

You can attach random triggers to mobs, objects, rooms, and vehicles.
#d
"SCRIPT COMMANDS" "TRIGEDIT SCRIPT COMMANDS"

The following is a list of special commands that can be used in triggers:

&c*&0 - A comment (the rest line is ignored).
&cattach&0 - Attaches a trigger to something.
&cbreak&0 - Ends a case or while.
&ccase&0 - Part of a switch statement.
&ccontext&0 - Sets the variable context, to prevent variable name collisions.
&cdefault&0 - Part of a switch statement.
&cdetach&0 - Removes a trigger from something.
&cdg_affect&0 - Adds a spell effect to a person.
&cdg_affect_room&0 - Adds a spell effect to a room.
&cdone&0 - Ends a switch or while statement.
&celse&0 - Part of an if/elseif/else/end series of conditions.
&celseif&0 - Part of an if/elseif/else/end series of conditions.
&cend&0 - The end of an if, elseif, or else series of conditions.
&ceval&0 - Evaluates an expression and assigns the result to a variable.
&cextract&0 - Gets a single word from a text string.
&cglobal&0 - Stores a variable to the room, reachable by other scripts.
&chalt&0 - Ends execution of a script early.
&cif&0 - Begins a conditional series.
&cmakeuid&0 - Stores a mob, obj, etc as a variable.
&cnop&0 - Executes the rest of the line but doesn't run the result as a command.
&crdelete&0 - Removes a variable that's stored to a character.
&cremote&0 - Store a variable to a character.
&creturn&0 - Sets the return value of the script (but doesn't halt).
&cset&0 - Sets some script to a variable, to be executed when called.
&cswitch&0 - Beginning of a switch/case/break/done statement.
&cunset&0 - Get rid of a global or local variable.
&cversion&0 - Causes a syslog of the DG Scripts version.
&cwait&0 - Delay script execution for a certain amount of time.
&cwhile&0 - Beginning of a while/done loop.

See the specific help files for those commands for more information.

See also: MTRIG COMMANDS, OTRIG COMMANDS, RTRIG COMMANDS, VTRIG COMMANDS
#d
"SPECIAL VARS" "SPEC VARS" "SPECIAL VARIABLES" TRIGEDIT-VARIABLES-SPECIALS SPEC-VARS %SELF% %RANDOM% %TIME% %PEOPLE% TRIGEDIT-SPEC-VAR %RANDOM.CHAR% %SPEECH% 

Special Variables When using field - The variable returns:
 
&cself&0 - The mob, item, or room running the script. Normal fields may be 
                used with this.
&ccooldown.<vnum>&0 - Get the name of a cooldown, by vnum.
&ccurrency.<vnum>(amt)&0 - Gets the currency name. The amt is used to determine
   whether to use the singular or plural name.
&cinstance.id&0 - Unique id of the adventure instance, if any.
&cinstance.level&0 - Get the locked level of the instance (if it has one of the
   LOCK-LEVEL-* flags).
&cinstance.level(lvl)&0 - Lock the instance at a given level, if it isn't
   already locked.
&instance.loaded&0 - Checks if the instance has been fully loaded or not.
&cinstance.load&0 - Forces loading an instance with the CAN-DELAY-LOAD. However,
   this happens automatically when a player arrives.
&cinstance.location&0 - The map/linked location of the instance, if any.
&cinstance.mob(vnum)&0 - Finds a copy of a mob belonging to the instance.
&cinstance.name&0 - Name of the adventure instance, if any.
&cinstance.nearest(rmt vnum)&0 - Finds a given room in the nearest instance
   that has one (only works if you aren't in a !LOCATION spot).
&cinstance.start&0 - The entry room of the instance, if any.
&cpeople.<vnum>&0 - This variable returns the number of people in the room 
   specified via vnum.
&crandom.<#>&0 - This returns a number between 1 and the field value. 
   %random.10% would return a number between 1 and 10.
&crandom.char&0 - This returns a random character in the room.
&crandom.ally&0 - Returns a random ally (only if fighting).
&crandom.enemy&0 - Returns a random enemy (only if fighting).
&cskill.name(sk)&0 - The full name of a skill abbreviated by sk.
&cskill.validate(sk)&0 - Returns true if sk is a valid skill.
&cspeech&0 - This variable is set to the complete phrase spoken by an actor 
   that triggers a speech trigger.
&cstartloc&0 - A random starting location.
&ctime.<field>&0 - Field may be hour, day, month, or year. The returned value will 
   be the current hour in the mud (0-23), day of the month (1-35), month
   (1-16), or year respectively.
&ctimestamp&0 - Current unix timestamp.
&cweather&0 - One of: sunny, cloudy, raining, lightning
&c|%var%&0 - name's, someone's, your
&c&&%var%&0 - it, you, he/she -- DOES NOT WORK
&c*%var%&0 - it, you, him/her
* object only
&c'%obj%&0 - something, name
#d
"SPEECH TRIGGER" "MTRIG SPEECH" "RTRIG SPEECH" "VTRIG SPEECH" TRIGEDIT-MOB-SPEECH TRIGEDIT-ROOM-SPEECH TRIGEDIT-VEH-SPEECH

Speech (trigger type)

Argument type:  the phrase (whole string) or word list to match, or * to match
   any text.

Speech triggers occur when someone in the room says the phrase (or one of the
words in a word list) using the normal "say" command. This is can be used to
add riddle quests, to make doors activate on command ("open sesame"), or to
add other types of interactions to the game.

Note: Objects cannot have speech triggers, but mobs, rooms, and vehicles can.
Note: Speech triggers attached to charmed mobs will not fire unless the trigger
   also has the Charmed type.

Variables:
  &c%actor%&0 - The character whose speech activated the trigger.
  &c%speech%&0 - The entire phrase spoken.

See also: MTRIG CHARMED
#d
"START QUEST TRIGGER" "MTRIG START QUEST" "OTRIG START QUEST" "RTRIG START QUEST" "VTRIG START QUEST" TRIGEDIT-MOB-START-QUEST TRIGEDIT-OBJ-START-QUEST TRIGEDIT-ROOM-START-QUEST TRIGEDIT-VEH-START-QUEST "START-QUEST TRIGGER"

Start Quest (trigger)

Argument type:  percent chance to execute
Return value:  return 0 to block the quest start

When a character attempts to start a new quest, it executes all the Start Quest
triggers in the room. It will also run Start Quest triggers attached to the
quest itself.

The quest's triggers always run LAST, allowing them to be sure that no other
trigger already prevented the quest start.

Variables:
  &c%actor%&0 - The character trying to get the quest.
  &c%questvnum%&0 - The vnum of the quest to start.
  &c%questname%&0 - The name of the quest to start.

See also: FINISH QUEST TRIGGER
#d
"TEXT VARIABLES" "TEXT VARS" TRIGEDIT-VARIABLES-TEXTS TEXT-VAR TRIGEDIT-TEXT-VAR

Text Variable Fields 

These fields pertain to any variable that contains a string of text. These 
are often the variables, such as %speech%, which are provided to a script, but 
can also be variables that have been created by the script, such as 
  %room.north% 

When using field - The variable returns
&cstrlen&0 - Returns the number of characters in the string.
&ctrim&0 - Returns the string without any leading or trailing whitespace. 
   This is used to trim extra spaces from the beginning or end of a string.
&ccar&0 - Returns the first word of the string. For %text%="this is the string";
   %text.car% will yield "this".
&ccdr&0 - Returns all but the first word of the string, trimmed. For %text%=
   "this is the string"; %text.cdr% will yield "is the string". 
&ccontains()&0 - Subfield used for comparison.
&cmudcommand&0 - Returns the mud command the string is shorthand for. Used to make 
   sure the command you react to is the one you want: For %text%="o"
   %text.mudcommand% will yield "open".
   
See also: MUDCOMMAND
#d
"TRIGGER VARIABLES" "SCRIPT VARIABLES" "TRIGGER VARS" "SCRIPT VARS" "TRIG VARS" TRIGEDIT-VARIABLES VARIABLES TRIG-VARS TRIG-VARIABLES VARS

Variables appear as a name surrounded by '%'s, such as %actor%

Before a command is processed, the line is scanned and any variables are
replaced. First the list of local variables are checked to see if the variable
is there. If not, the global variables are checked. A proper global match must
have a zero context or the current context of the script. (When a script starts
running, its context is 0. The script context command may be used to change
context.) If a match is still not found, a list of 'built in' variables (ones
not declared by the script) are checked. If no match is found, the variable is
replaced with an empty string (the variable is removed from the line, and
nothing added in its place).

There are two types of variables, local and global. All local variables are
deleted when a trigger finishes executing, and can only be used by the trigger.
Global variables remain until removed with unset, or the script is removed. 

Global variables also have a context associated with them. By default, the
context is 0. Any global being referenced with a context of zero will be seen.
Through the 'context <value>' command, a script may set its context to any
integer; Globals created are always assigned the current script context. When a
global is referenced, if it's context is not 0 or the current context of the
script, it will not be seen. This technique allows, among other things, arrays
of globals to be created by using a series of contexts as indexes. Also, it
allows globals to be associated with a specific character, room, or object in
the game, by using the id of the target as the context. 

Variable Fields 

A field of a variable can also retrieved, based on their type. To get a field,
a notation of %variable.field% is used. The valid fields are listed in the help
files below. 

Variables for characters: &yMTRIG VARS&0
Variables for objects: &yOTRIG VARS&0
Variables for rooms: &yRTRIG VARS&0
Variables for vehicles: &yVTRIG VARS&0
Variables for text: &yTEXT VARS&0
Variables for special stuff: &ySPEC VARS&0

See also: GLOBAL
#d
VAREXISTS %VAREXISTS% %EXISTS% EXISTS

Usage:  %actor.varexists(varname)%

This lets you determine if a person has a variable that was given to them
using the "remote" command.

Example:
  if %actor.varexists(quest_progress)%
    eval progress %actor.quest_progress%
  else
    eval progress 0
  end
  ...
  eval quest_progress %progress% + 1
  remote quest_progress %actor.id%

See also:  EVAL, REMOTE
#d
$~
